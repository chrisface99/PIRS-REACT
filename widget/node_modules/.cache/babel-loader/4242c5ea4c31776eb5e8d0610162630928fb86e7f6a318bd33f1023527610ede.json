{"ast":null,"code":"// widget/src/services/utils.js\nimport{IATA_CITY_MAPPING}from\"./config.js\";export function getCityNameFromIATA(iata){const mapping=IATA_CITY_MAPPING.find(entry=>entry.iata===iata);return mapping?mapping.city:\"Unknown City\";}export function formatFlightTime(dateString){let useUTC=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;const date=new Date(dateString);if(useUTC){// Always show UTC time\nreturn date.toLocaleTimeString(\"en-US\",{hour:\"2-digit\",minute:\"2-digit\",hour12:false,timeZone:\"UTC\"});}else{// Show local time\nreturn date.toLocaleTimeString(\"en-US\",{hour:\"2-digit\",minute:\"2-digit\",hour12:false});}}export function isUpcomingFlight(flightTime){let isArrival=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;const currentTime=new Date();const currentHour=currentTime.getHours();const currentMinutes=currentTime.getMinutes();const flightDateTime=new Date(flightTime);const flightHour=flightDateTime.getHours();const flightMinutes=flightDateTime.getMinutes();return flightHour>currentHour||flightHour===currentHour&&flightMinutes>=currentMinutes;}export function sortFlightsByTime(flights,timeField){return flights.sort((a,b)=>{const timeA=new Date(a[timeField].scheduled);const timeB=new Date(b[timeField].scheduled);return timeA-timeB;});}export function generateRandomGate(){const letter=String.fromCharCode(65+Math.floor(Math.random()*7));const number=Math.floor(Math.random()*20)+1;return`${letter}${number}`;}export function getRandomFlightStatus(){const statusOptions=[\"On Time\",\"Boarding\",\"Delayed\",\"Cancelled\"];const statusClasses=[\"on-time\",\"boarding\",\"delayed\",\"cancelled\"];const randomIndex=Math.floor(Math.random()*statusOptions.length);return{status:statusOptions[randomIndex],statusClass:statusClasses[randomIndex]};}","map":{"version":3,"names":["IATA_CITY_MAPPING","getCityNameFromIATA","iata","mapping","find","entry","city","formatFlightTime","dateString","useUTC","arguments","length","undefined","date","Date","toLocaleTimeString","hour","minute","hour12","timeZone","isUpcomingFlight","flightTime","isArrival","currentTime","currentHour","getHours","currentMinutes","getMinutes","flightDateTime","flightHour","flightMinutes","sortFlightsByTime","flights","timeField","sort","a","b","timeA","scheduled","timeB","generateRandomGate","letter","String","fromCharCode","Math","floor","random","number","getRandomFlightStatus","statusOptions","statusClasses","randomIndex","status","statusClass"],"sources":["C:/Users/c.pulawski/workspace/pirs-react-app/widget/src/services/utils.js"],"sourcesContent":["// widget/src/services/utils.js\r\nimport { IATA_CITY_MAPPING } from \"./config.js\";\r\n\r\nexport function getCityNameFromIATA(iata) {\r\n  const mapping = IATA_CITY_MAPPING.find((entry) => entry.iata === iata);\r\n  return mapping ? mapping.city : \"Unknown City\";\r\n}\r\n\r\nexport function formatFlightTime(dateString, useUTC = false) {\r\n  const date = new Date(dateString);\r\n  if (useUTC) {\r\n    // Always show UTC time\r\n    return date.toLocaleTimeString(\"en-US\", {\r\n      hour: \"2-digit\",\r\n      minute: \"2-digit\",\r\n      hour12: false,\r\n      timeZone: \"UTC\"\r\n    });\r\n  } else {\r\n    // Show local time\r\n    return date.toLocaleTimeString(\"en-US\", {\r\n      hour: \"2-digit\",\r\n      minute: \"2-digit\",\r\n      hour12: false,\r\n    });\r\n  }\r\n}\r\n\r\nexport function isUpcomingFlight(flightTime, isArrival = false) {\r\n  const currentTime = new Date();\r\n  const currentHour = currentTime.getHours();\r\n  const currentMinutes = currentTime.getMinutes();\r\n\r\n  const flightDateTime = new Date(flightTime);\r\n  const flightHour = flightDateTime.getHours();\r\n  const flightMinutes = flightDateTime.getMinutes();\r\n\r\n  return (\r\n    flightHour > currentHour ||\r\n    (flightHour === currentHour && flightMinutes >= currentMinutes)\r\n  );\r\n}\r\n\r\nexport function sortFlightsByTime(flights, timeField) {\r\n  return flights.sort((a, b) => {\r\n    const timeA = new Date(a[timeField].scheduled);\r\n    const timeB = new Date(b[timeField].scheduled);\r\n    return timeA - timeB;\r\n  });\r\n}\r\n\r\nexport function generateRandomGate() {\r\n  const letter = String.fromCharCode(65 + Math.floor(Math.random() * 7));\r\n  const number = Math.floor(Math.random() * 20) + 1;\r\n  return `${letter}${number}`;\r\n}\r\n\r\nexport function getRandomFlightStatus() {\r\n  const statusOptions = [\"On Time\", \"Boarding\", \"Delayed\", \"Cancelled\"];\r\n  const statusClasses = [\"on-time\", \"boarding\", \"delayed\", \"cancelled\"];\r\n  const randomIndex = Math.floor(Math.random() * statusOptions.length);\r\n\r\n  return {\r\n    status: statusOptions[randomIndex],\r\n    statusClass: statusClasses[randomIndex],\r\n  };\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}