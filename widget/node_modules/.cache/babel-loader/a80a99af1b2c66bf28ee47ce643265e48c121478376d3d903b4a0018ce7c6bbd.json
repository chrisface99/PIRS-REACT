{"ast":null,"code":"// widget/src/services/FlightService.js\nimport{CONFIG}from\"./config.js\";class FlightService{constructor(){this._lastFetchTime=null;this._lastFetchType=null;this._lastData=null;this._fetchInProgress=false;this._fetchQueue=[];}async fetchArrivals(){const code=typeof CONFIG.iataCodeCity==='string'&&CONFIG.iataCodeCity.length===3?CONFIG.iataCodeCity:\"WAW\";// Get current date in YYYY-MM-DD format\nconst now=new Date();const year=now.getFullYear();const month=String(now.getMonth()+1).padStart(2,'0');const day=String(now.getDate()).padStart(2,'0');const flightDate=`${year}-${month}-${day}`;const url=`https://api.aviationstack.com/v1/flights?access_key=${CONFIG.AVIATIONSTACK_API_KEY}&arr_iata=${code}&arr_scheduled_time_arr=${flightDate}`;console.log(\"[FlightService] Fetching flights from URL:\",url);if(!CONFIG.AVIATIONSTACK_API_KEY||CONFIG.AVIATIONSTACK_API_KEY===\"\"){console.error(\"[FlightService] API key is missing or empty!\",CONFIG.AVIATIONSTACK_API_KEY);return[];}try{const response=await fetch(url);if(!response.ok){console.error(`[FlightService] Fetch failed: HTTP status ${response.status} - ${response.statusText}`);return[];}const data=await response.json();return Array.isArray(data.data)?data.data:[];}catch(error){console.error(\"Error fetching arrivals:\",error,\"URL:\",url,\"API Key:\",CONFIG.AVIATIONSTACK_API_KEY);return[];}}updateFromConfig(config){if(config&&typeof config.iataCodeCity===\"string\"&&config.iataCodeCity.length===3){CONFIG.iataCodeCity=config.iataCodeCity;}}getFetchUrl(type,iataCode){const code=typeof CONFIG.iataCodeCity==='string'&&CONFIG.iataCodeCity.length===3?CONFIG.iataCodeCity:typeof iataCode==='string'&&iataCode.length===3?iataCode:\"WAW\";return`${CONFIG.AVIATIONSTACK_BASE_URL}?access_key=${CONFIG.AVIATIONSTACK_API_KEY}&iataCode=${code}&type=${type}`;}async fetchFlights(){let type=arguments.length>0&&arguments[0]!==undefined?arguments[0]:\"departure\";let iataCode=arguments.length>1?arguments[1]:undefined;const now=Date.now();if(this._lastFetchTime&&this._lastFetchType===type&&now-this._lastFetchTime<180000&&this._lastData){return this._lastData;}if(this._fetchInProgress){return new Promise((resolve,reject)=>{this._fetchQueue.push({type,resolve,reject});});}this._fetchInProgress=true;if(!this._lastFetchTime){await new Promise(resolve=>setTimeout(resolve,3000));}const url=this.getFetchUrl(type,iataCode);console.log(\"[FlightService] Fetching flights from URL:\",url);try{const response=await fetch(url);const data=await response.json();this._lastFetchTime=Date.now();this._lastFetchType=type;this._lastData=data.data||[];while(this._fetchQueue.length>0){const queued=this._fetchQueue.shift();queued.resolve(this._lastData);}return this._lastData;}catch(error){while(this._fetchQueue.length>0){const queued=this._fetchQueue.shift();queued.reject(error);}console.error(\"Error fetching flight data:\",error);return[];}finally{this._fetchInProgress=false;}}async fetchAirlineIcon(airlineCode){const iconUrlSvgS=`${CONFIG.AIRLINE_ICON_S_URL}${airlineCode}.svg`;try{const responseSvgS=await fetch(iconUrlSvgS);if(responseSvgS.ok){return iconUrlSvgS;}}catch(error){console.error(`Error fetching airline icon SVG from S_URL for ${airlineCode}:`,error);}const iconUrlPngT=`${CONFIG.AIRLINE_ICON_T_URL}${airlineCode}.png`;try{const responsePngT=await fetch(iconUrlPngT);if(responsePngT.ok){return iconUrlPngT;}}catch(error){console.error(`Error fetching airline icon PNG from T_URL for ${airlineCode}:`,error);}const iconUrlSvgBase=`${CONFIG.AIRLINE_ICON_BASE_URL}${airlineCode}.svg`;try{const responseSvgBase=await fetch(iconUrlSvgBase);if(responseSvgBase.ok){const text=await responseSvgBase.text();const trimmed=text.trim();if(trimmed.length>0&&!trimmed.toLowerCase().includes('<html')&&(trimmed.startsWith('<svg')||trimmed.startsWith('<?xml'))){return iconUrlSvgBase;}}}catch(error){console.error(`Error fetching airline icon SVG from BASE_URL for ${airlineCode}:`,error);}const externalDefault=`${CONFIG.DEFAULT_AIRLINE_ICON}`;try{const responseDefault=await fetch(externalDefault);if(responseDefault.ok){const text=await responseDefault.text();const trimmed=text.trim();if(trimmed.length>0&&!trimmed.toLowerCase().includes('<html')&&(trimmed.startsWith('<svg')||trimmed.startsWith('<?xml'))){return externalDefault;}}}catch(error){console.error(`Error fetching external default airline icon:`,error);}return'data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 55 55\"><circle fill=\"#0381fe\" cx=\"27.5\" cy=\"7.5\" r=\"5.6\"/><circle fill=\"#0381fe\" cx=\"27.5\" cy=\"47.5\" r=\"5.6\"/><circle fill=\"#0381fe\" cx=\"7.5\" cy=\"27.5\" r=\"5.6\"/><circle fill=\"#00d694\" cx=\"47.5\" cy=\"27.5\" r=\"5.6\"/></svg>';}}export default FlightService;","map":{"version":3,"names":["CONFIG","FlightService","constructor","_lastFetchTime","_lastFetchType","_lastData","_fetchInProgress","_fetchQueue","fetchArrivals","code","iataCodeCity","length","now","Date","year","getFullYear","month","String","getMonth","padStart","day","getDate","flightDate","url","AVIATIONSTACK_API_KEY","console","log","error","response","fetch","ok","status","statusText","data","json","Array","isArray","updateFromConfig","config","getFetchUrl","type","iataCode","AVIATIONSTACK_BASE_URL","fetchFlights","arguments","undefined","Promise","resolve","reject","push","setTimeout","queued","shift","fetchAirlineIcon","airlineCode","iconUrlSvgS","AIRLINE_ICON_S_URL","responseSvgS","iconUrlPngT","AIRLINE_ICON_T_URL","responsePngT","iconUrlSvgBase","AIRLINE_ICON_BASE_URL","responseSvgBase","text","trimmed","trim","toLowerCase","includes","startsWith","externalDefault","DEFAULT_AIRLINE_ICON","responseDefault"],"sources":["C:/Users/c.pulawski/workspace/pirs-react-app/widget/src/services/FlightService.js"],"sourcesContent":["// widget/src/services/FlightService.js\r\nimport { CONFIG } from \"./config.js\";\r\n\r\nclass FlightService {\r\n  constructor() {\r\n    this._lastFetchTime = null;\r\n    this._lastFetchType = null;\r\n    this._lastData = null;\r\n    this._fetchInProgress = false;\r\n    this._fetchQueue = [];\r\n  }\r\n\r\n  async fetchArrivals() {\r\n    const code = (typeof CONFIG.iataCodeCity === 'string' && CONFIG.iataCodeCity.length === 3)\r\n      ? CONFIG.iataCodeCity\r\n      : \"WAW\";\r\n    \r\n    // Get current date in YYYY-MM-DD format\r\n    const now = new Date();\r\n    const year = now.getFullYear();\r\n    const month = String(now.getMonth() + 1).padStart(2, '0');\r\n    const day = String(now.getDate()).padStart(2, '0');\r\n    const flightDate = `${year}-${month}-${day}`;\r\n    const url = `https://api.aviationstack.com/v1/flights?access_key=${CONFIG.AVIATIONSTACK_API_KEY}&arr_iata=${code}&arr_scheduled_time_arr=${flightDate}`;\r\n    \r\n    console.log(\"[FlightService] Fetching flights from URL:\", url);\r\n    \r\n    if (!CONFIG.AVIATIONSTACK_API_KEY || CONFIG.AVIATIONSTACK_API_KEY === \"\") {\r\n      console.error(\"[FlightService] API key is missing or empty!\", CONFIG.AVIATIONSTACK_API_KEY);\r\n      return [];\r\n    }\r\n    \r\n    try {\r\n      const response = await fetch(url);\r\n      if (!response.ok) {\r\n        console.error(`[FlightService] Fetch failed: HTTP status ${response.status} - ${response.statusText}`);\r\n        return [];\r\n      }\r\n      const data = await response.json();\r\n      return Array.isArray(data.data) ? data.data : [];\r\n    } catch (error) {\r\n      console.error(\"Error fetching arrivals:\", error, \"URL:\", url, \"API Key:\", CONFIG.AVIATIONSTACK_API_KEY);\r\n      return [];\r\n    }\r\n  }\r\n\r\n  updateFromConfig(config) {\r\n    if (config && typeof config.iataCodeCity === \"string\" && config.iataCodeCity.length === 3) {\r\n      CONFIG.iataCodeCity = config.iataCodeCity;\r\n    }\r\n  }\r\n\r\n  getFetchUrl(type, iataCode) {\r\n    const code = (typeof CONFIG.iataCodeCity === 'string' && CONFIG.iataCodeCity.length === 3)\r\n      ? CONFIG.iataCodeCity\r\n      : (typeof iataCode === 'string' && iataCode.length === 3)\r\n        ? iataCode\r\n        : \"WAW\";\r\n    return `${CONFIG.AVIATIONSTACK_BASE_URL}?access_key=${CONFIG.AVIATIONSTACK_API_KEY}&iataCode=${code}&type=${type}`;\r\n  }\r\n\r\n  async fetchFlights(type = \"departure\", iataCode) {\r\n    const now = Date.now();\r\n    if (\r\n      this._lastFetchTime &&\r\n      this._lastFetchType === type &&\r\n      now - this._lastFetchTime < 180000 &&\r\n      this._lastData\r\n    ) {\r\n      return this._lastData;\r\n    }\r\n\r\n    if (this._fetchInProgress) {\r\n      return new Promise((resolve, reject) => {\r\n        this._fetchQueue.push({ type, resolve, reject });\r\n      });\r\n    }\r\n\r\n    this._fetchInProgress = true;\r\n    if (!this._lastFetchTime) {\r\n      await new Promise(resolve => setTimeout(resolve, 3000));\r\n    }\r\n    \r\n    const url = this.getFetchUrl(type, iataCode);\r\n    console.log(\"[FlightService] Fetching flights from URL:\", url);\r\n    \r\n    try {\r\n      const response = await fetch(url);\r\n      const data = await response.json();\r\n      this._lastFetchTime = Date.now();\r\n      this._lastFetchType = type;\r\n      this._lastData = data.data || [];\r\n      \r\n      while (this._fetchQueue.length > 0) {\r\n        const queued = this._fetchQueue.shift();\r\n        queued.resolve(this._lastData);\r\n      }\r\n      \r\n      return this._lastData;\r\n    } catch (error) {\r\n      while (this._fetchQueue.length > 0) {\r\n        const queued = this._fetchQueue.shift();\r\n        queued.reject(error);\r\n      }\r\n      console.error(\"Error fetching flight data:\", error);\r\n      return [];\r\n    } finally {\r\n      this._fetchInProgress = false;\r\n    }\r\n  }\r\n\r\n  async fetchAirlineIcon(airlineCode) {\r\n    const iconUrlSvgS = `${CONFIG.AIRLINE_ICON_S_URL}${airlineCode}.svg`;\r\n    try {\r\n      const responseSvgS = await fetch(iconUrlSvgS);\r\n      if (responseSvgS.ok) {\r\n        return iconUrlSvgS;\r\n      }\r\n    } catch (error) {\r\n      console.error(`Error fetching airline icon SVG from S_URL for ${airlineCode}:`, error);\r\n    }\r\n\r\n    const iconUrlPngT = `${CONFIG.AIRLINE_ICON_T_URL}${airlineCode}.png`;\r\n    try {\r\n      const responsePngT = await fetch(iconUrlPngT);\r\n      if (responsePngT.ok) {\r\n        return iconUrlPngT;\r\n      }\r\n    } catch (error) {\r\n      console.error(`Error fetching airline icon PNG from T_URL for ${airlineCode}:`, error);\r\n    }\r\n\r\n    const iconUrlSvgBase = `${CONFIG.AIRLINE_ICON_BASE_URL}${airlineCode}.svg`;\r\n    try {\r\n      const responseSvgBase = await fetch(iconUrlSvgBase);\r\n      if (responseSvgBase.ok) {\r\n        const text = await responseSvgBase.text();\r\n        const trimmed = text.trim();\r\n        if (\r\n          trimmed.length > 0 &&\r\n          !trimmed.toLowerCase().includes('<html') &&\r\n          (trimmed.startsWith('<svg') || trimmed.startsWith('<?xml'))\r\n        ) {\r\n          return iconUrlSvgBase;\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(`Error fetching airline icon SVG from BASE_URL for ${airlineCode}:`, error);\r\n    }\r\n    \r\n    const externalDefault = `${CONFIG.DEFAULT_AIRLINE_ICON}`;\r\n    try {\r\n      const responseDefault = await fetch(externalDefault);\r\n      if (responseDefault.ok) {\r\n        const text = await responseDefault.text();\r\n        const trimmed = text.trim();\r\n        if (\r\n          trimmed.length > 0 &&\r\n          !trimmed.toLowerCase().includes('<html') &&\r\n          (trimmed.startsWith('<svg') || trimmed.startsWith('<?xml'))\r\n        ) {\r\n          return externalDefault;\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(`Error fetching external default airline icon:`, error);\r\n    }\r\n    \r\n    return 'data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 55 55\"><circle fill=\"#0381fe\" cx=\"27.5\" cy=\"7.5\" r=\"5.6\"/><circle fill=\"#0381fe\" cx=\"27.5\" cy=\"47.5\" r=\"5.6\"/><circle fill=\"#0381fe\" cx=\"7.5\" cy=\"27.5\" r=\"5.6\"/><circle fill=\"#00d694\" cx=\"47.5\" cy=\"27.5\" r=\"5.6\"/></svg>';\r\n  }\r\n}\r\n\r\nexport default FlightService;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}