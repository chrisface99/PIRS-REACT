{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\c.pulawski\\\\workspace\\\\pirs-react-app\\\\widget\\\\src\\\\components\\\\FlightTable.jsx\",\n  _s = $RefreshSig$();\n// widget/src/components/FlightTable.jsx\nimport React, { useState, useEffect } from 'react';\nimport { getCityNameFromIATA, formatFlightTime, isUpcomingFlight, sortFlightsByTime } from '../services/utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FlightTable = ({\n  type,\n  flights,\n  airportLocation,\n  rowsCount,\n  flightService\n}) => {\n  _s();\n  const [processedFlights, setProcessedFlights] = useState([]);\n  const [airlineIcons, setAirlineIcons] = useState({});\n  useEffect(() => {\n    processFlights();\n  }, [flights, rowsCount, type]);\n  const processFlights = async () => {\n    if (!flights || flights.length === 0) {\n      setProcessedFlights([]);\n      return;\n    }\n    let workingFlights = [...flights];\n    if (type === 'departures') {\n      // Filter upcoming flights for departures\n      let upcomingFlights = workingFlights.filter(flight => {\n        var _flight$departure, _flight$departure2;\n        return isUpcomingFlight(((_flight$departure = flight.departure) === null || _flight$departure === void 0 ? void 0 : _flight$departure.scheduledTime) || ((_flight$departure2 = flight.departure) === null || _flight$departure2 === void 0 ? void 0 : _flight$departure2.scheduled));\n      });\n      if (upcomingFlights.length === 0) {\n        upcomingFlights = [...workingFlights];\n      }\n      workingFlights = sortFlightsByTime(upcomingFlights, \"departure\");\n    } else {\n      // Filter and sort arrivals\n      const now = Date.now();\n      workingFlights = workingFlights.filter(f => {\n        if (!f.arrival || !f.arrival.scheduled) return false;\n        const sched = new Date(f.arrival.scheduled).getTime();\n        return sched >= now;\n      }).sort((a, b) => {\n        const tA = new Date(a.arrival.scheduled).getTime();\n        const tB = new Date(b.arrival.scheduled).getTime();\n        return tA - tB;\n      });\n    }\n\n    // Remove duplicates and limit rows\n    const uniqueFlights = [];\n    const seenFlightNo = new Set();\n    for (const flight of workingFlights) {\n      var _flight$flight, _flight$flight2, _flight$flight3, _flight$flight4;\n      if (uniqueFlights.length >= rowsCount) break;\n      const flightNumber = ((_flight$flight = flight.flight) === null || _flight$flight === void 0 ? void 0 : _flight$flight.iataNumber) || ((_flight$flight2 = flight.flight) === null || _flight$flight2 === void 0 ? void 0 : _flight$flight2.iata) || ((_flight$flight3 = flight.flight) === null || _flight$flight3 === void 0 ? void 0 : _flight$flight3.icaoNumber) || ((_flight$flight4 = flight.flight) === null || _flight$flight4 === void 0 ? void 0 : _flight$flight4.number);\n      if (seenFlightNo.has(flightNumber === null || flightNumber === void 0 ? void 0 : flightNumber.toUpperCase()) || !!flight.codeshared) continue;\n      uniqueFlights.push(flight);\n      if (flightNumber) {\n        seenFlightNo.add(flightNumber.toUpperCase());\n      }\n    }\n    setProcessedFlights(uniqueFlights);\n\n    // Fetch airline icons\n    const iconPromises = uniqueFlights.map(async flight => {\n      var _flight$airline, _flight$airline2;\n      const airlineCode = ((_flight$airline = flight.airline) === null || _flight$airline === void 0 ? void 0 : _flight$airline.iataCode) || ((_flight$airline2 = flight.airline) === null || _flight$airline2 === void 0 ? void 0 : _flight$airline2.iata) || \"XX\";\n      if (!airlineIcons[airlineCode]) {\n        const icon = await flightService.fetchAirlineIcon(airlineCode);\n        return {\n          [airlineCode]: icon\n        };\n      }\n      return null;\n    });\n    const iconResults = await Promise.all(iconPromises);\n    const newIcons = iconResults.reduce((acc, result) => {\n      if (result) Object.assign(acc, result);\n      return acc;\n    }, {});\n    setAirlineIcons(prev => ({\n      ...prev,\n      ...newIcons\n    }));\n  };\n  const renderFlightRow = (flight, index) => {\n    var _flight$airline3, _flight$airline4, _flight$flight5, _flight$flight6, _flight$flight7, _flight$flight8;\n    const isDeparture = type === 'departures';\n    const flightData = isDeparture ? flight.departure : flight.arrival;\n    const destinationData = isDeparture ? flight.arrival : flight.departure;\n    const flightTime = formatFlightTime((flightData === null || flightData === void 0 ? void 0 : flightData.scheduledTime) || (flightData === null || flightData === void 0 ? void 0 : flightData.scheduled), !isDeparture);\n    const estimatedTime = flightData !== null && flightData !== void 0 && flightData.estimatedTime || flightData !== null && flightData !== void 0 && flightData.estimated ? formatFlightTime(flightData.estimatedTime || flightData.estimated, !isDeparture) : \"-\";\n    const iataCode = (destinationData === null || destinationData === void 0 ? void 0 : destinationData.iataCode) || (destinationData === null || destinationData === void 0 ? void 0 : destinationData.iata) || \"Unknown\";\n    const cityName = getCityNameFromIATA(iataCode);\n    const airlineCode = ((_flight$airline3 = flight.airline) === null || _flight$airline3 === void 0 ? void 0 : _flight$airline3.iataCode) || ((_flight$airline4 = flight.airline) === null || _flight$airline4 === void 0 ? void 0 : _flight$airline4.iata) || \"XX\";\n    const airlineIcon = airlineIcons[airlineCode] || 'data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 55 55\"><circle fill=\"#0381fe\" cx=\"27.5\" cy=\"7.5\" r=\"5.6\"/></svg>';\n    const flightNumber = ((_flight$flight5 = flight.flight) === null || _flight$flight5 === void 0 ? void 0 : _flight$flight5.iataNumber) || ((_flight$flight6 = flight.flight) === null || _flight$flight6 === void 0 ? void 0 : _flight$flight6.iata) || ((_flight$flight7 = flight.flight) === null || _flight$flight7 === void 0 ? void 0 : _flight$flight7.icaoNumber) || ((_flight$flight8 = flight.flight) === null || _flight$flight8 === void 0 ? void 0 : _flight$flight8.number) || \"N/A\";\n    let gate = (flightData === null || flightData === void 0 ? void 0 : flightData.gate) || \"Soon\";\n    let status = flight.flight_status || flight.status || \"N/A\";\n    let statusDisplay = status;\n    let statusClass = status.toLowerCase().replace(/\\s/g, \"-\");\n    if (flightData !== null && flightData !== void 0 && flightData.delay) {\n      status = \"delayed\";\n      statusDisplay = \"delayed\";\n      statusClass = \"delayed\";\n    }\n    const rowClass = index % 2 === 0 ? \"flight-row-even\" : \"flight-row-odd\";\n    return /*#__PURE__*/_jsxDEV(\"tr\", {\n      className: rowClass,\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: flightTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: [cityName, \" (\", iataCode, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: airlineIcon,\n          alt: airlineCode,\n          className: \"airline-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), flightNumber]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: gate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        className: `status-cell ${statusClass}`,\n        children: statusDisplay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: estimatedTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)]\n    }, `${flightNumber}-${index}`, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this);\n  };\n  const sectionId = type === 'departures' ? 'departures-section' : 'arrivals-section';\n  const title = type === 'departures' ? 'DEPARTURES' : 'ARRIVALS';\n  const tableId = type === 'departures' ? 'departure-table' : 'arrival-table';\n  const columnTitle = type === 'departures' ? 'DESTINATION' : 'ORIGIN';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flight-section\",\n    id: sectionId,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flight-icon\",\n        children: \"\\u2708\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      id: tableId,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"TIME\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: columnTitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"FLIGHT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"GATE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"STATUS\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"EST\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: processedFlights.map((flight, index) => renderFlightRow(flight, index))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 5\n  }, this);\n};\n_s(FlightTable, \"Ev6LDtb7Z/YX+wz/oMGoAqj3X+k=\");\n_c = FlightTable;\nexport default FlightTable;\nvar _c;\n$RefreshReg$(_c, \"FlightTable\");","map":{"version":3,"names":["React","useState","useEffect","getCityNameFromIATA","formatFlightTime","isUpcomingFlight","sortFlightsByTime","jsxDEV","_jsxDEV","FlightTable","type","flights","airportLocation","rowsCount","flightService","_s","processedFlights","setProcessedFlights","airlineIcons","setAirlineIcons","processFlights","length","workingFlights","upcomingFlights","filter","flight","_flight$departure","_flight$departure2","departure","scheduledTime","scheduled","now","Date","f","arrival","sched","getTime","sort","a","b","tA","tB","uniqueFlights","seenFlightNo","Set","_flight$flight","_flight$flight2","_flight$flight3","_flight$flight4","flightNumber","iataNumber","iata","icaoNumber","number","has","toUpperCase","codeshared","push","add","iconPromises","map","_flight$airline","_flight$airline2","airlineCode","airline","iataCode","icon","fetchAirlineIcon","iconResults","Promise","all","newIcons","reduce","acc","result","Object","assign","prev","renderFlightRow","index","_flight$airline3","_flight$airline4","_flight$flight5","_flight$flight6","_flight$flight7","_flight$flight8","isDeparture","flightData","destinationData","flightTime","estimatedTime","estimated","cityName","airlineIcon","gate","status","flight_status","statusDisplay","statusClass","toLowerCase","replace","delay","rowClass","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","sectionId","title","tableId","columnTitle","id","_c","$RefreshReg$"],"sources":["C:/Users/c.pulawski/workspace/pirs-react-app/widget/src/components/FlightTable.jsx"],"sourcesContent":["// widget/src/components/FlightTable.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport { \r\n  getCityNameFromIATA, \r\n  formatFlightTime, \r\n  isUpcomingFlight, \r\n  sortFlightsByTime \r\n} from '../services/utils';\r\n\r\nconst FlightTable = ({ type, flights, airportLocation, rowsCount, flightService }) => {\r\n  const [processedFlights, setProcessedFlights] = useState([]);\r\n  const [airlineIcons, setAirlineIcons] = useState({});\r\n\r\n  useEffect(() => {\r\n    processFlights();\r\n  }, [flights, rowsCount, type]);\r\n\r\n  const processFlights = async () => {\r\n    if (!flights || flights.length === 0) {\r\n      setProcessedFlights([]);\r\n      return;\r\n    }\r\n\r\n    let workingFlights = [...flights];\r\n\r\n    if (type === 'departures') {\r\n      // Filter upcoming flights for departures\r\n      let upcomingFlights = workingFlights.filter((flight) =>\r\n        isUpcomingFlight(flight.departure?.scheduledTime || flight.departure?.scheduled)\r\n      );\r\n\r\n      if (upcomingFlights.length === 0) {\r\n        upcomingFlights = [...workingFlights];\r\n      }\r\n\r\n      workingFlights = sortFlightsByTime(upcomingFlights, \"departure\");\r\n    } else {\r\n      // Filter and sort arrivals\r\n      const now = Date.now();\r\n      workingFlights = workingFlights\r\n        .filter(f => {\r\n          if (!f.arrival || !f.arrival.scheduled) return false;\r\n          const sched = new Date(f.arrival.scheduled).getTime();\r\n          return sched >= now;\r\n        })\r\n        .sort((a, b) => {\r\n          const tA = new Date(a.arrival.scheduled).getTime();\r\n          const tB = new Date(b.arrival.scheduled).getTime();\r\n          return tA - tB;\r\n        });\r\n    }\r\n\r\n    // Remove duplicates and limit rows\r\n    const uniqueFlights = [];\r\n    const seenFlightNo = new Set();\r\n\r\n    for (const flight of workingFlights) {\r\n      if (uniqueFlights.length >= rowsCount) break;\r\n      \r\n      const flightNumber = flight.flight?.iataNumber || flight.flight?.iata || \r\n                          flight.flight?.icaoNumber || flight.flight?.number;\r\n      \r\n      if (seenFlightNo.has(flightNumber?.toUpperCase()) || !!flight.codeshared) continue;\r\n      \r\n      uniqueFlights.push(flight);\r\n      if (flightNumber) {\r\n        seenFlightNo.add(flightNumber.toUpperCase());\r\n      }\r\n    }\r\n\r\n    setProcessedFlights(uniqueFlights);\r\n\r\n    // Fetch airline icons\r\n    const iconPromises = uniqueFlights.map(async (flight) => {\r\n      const airlineCode = flight.airline?.iataCode || flight.airline?.iata || \"XX\";\r\n      if (!airlineIcons[airlineCode]) {\r\n        const icon = await flightService.fetchAirlineIcon(airlineCode);\r\n        return { [airlineCode]: icon };\r\n      }\r\n      return null;\r\n    });\r\n\r\n    const iconResults = await Promise.all(iconPromises);\r\n    const newIcons = iconResults.reduce((acc, result) => {\r\n      if (result) Object.assign(acc, result);\r\n      return acc;\r\n    }, {});\r\n\r\n    setAirlineIcons(prev => ({ ...prev, ...newIcons }));\r\n  };\r\n\r\n  const renderFlightRow = (flight, index) => {\r\n    const isDeparture = type === 'departures';\r\n    const flightData = isDeparture ? flight.departure : flight.arrival;\r\n    const destinationData = isDeparture ? flight.arrival : flight.departure;\r\n\r\n    const flightTime = formatFlightTime(\r\n      flightData?.scheduledTime || flightData?.scheduled, \r\n      !isDeparture\r\n    );\r\n    \r\n    const estimatedTime = flightData?.estimatedTime || flightData?.estimated \r\n      ? formatFlightTime(flightData.estimatedTime || flightData.estimated, !isDeparture) \r\n      : \"-\";\r\n\r\n    const iataCode = destinationData?.iataCode || destinationData?.iata || \"Unknown\";\r\n    const cityName = getCityNameFromIATA(iataCode);\r\n\r\n    const airlineCode = flight.airline?.iataCode || flight.airline?.iata || \"XX\";\r\n    const airlineIcon = airlineIcons[airlineCode] || 'data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 55 55\"><circle fill=\"#0381fe\" cx=\"27.5\" cy=\"7.5\" r=\"5.6\"/></svg>';\r\n\r\n    const flightNumber = flight.flight?.iataNumber || flight.flight?.iata || \r\n                        flight.flight?.icaoNumber || flight.flight?.number || \"N/A\";\r\n\r\n    let gate = flightData?.gate || \"Soon\";\r\n    let status = flight.flight_status || flight.status || \"N/A\";\r\n    let statusDisplay = status;\r\n    let statusClass = status.toLowerCase().replace(/\\s/g, \"-\");\r\n\r\n    if (flightData?.delay) {\r\n      status = \"delayed\";\r\n      statusDisplay = \"delayed\";\r\n      statusClass = \"delayed\";\r\n    }\r\n\r\n    const rowClass = index % 2 === 0 ? \"flight-row-even\" : \"flight-row-odd\";\r\n\r\n    return (\r\n      <tr key={`${flightNumber}-${index}`} className={rowClass}>\r\n        <td>{flightTime}</td>\r\n        <td>{cityName} ({iataCode})</td>\r\n        <td>\r\n          <img src={airlineIcon} alt={airlineCode} className=\"airline-icon\" />\r\n          {flightNumber}\r\n        </td>\r\n        <td>{gate}</td>\r\n        <td className={`status-cell ${statusClass}`}>{statusDisplay}</td>\r\n        <td>{estimatedTime}</td>\r\n      </tr>\r\n    );\r\n  };\r\n\r\n  const sectionId = type === 'departures' ? 'departures-section' : 'arrivals-section';\r\n  const title = type === 'departures' ? 'DEPARTURES' : 'ARRIVALS';\r\n  const tableId = type === 'departures' ? 'departure-table' : 'arrival-table';\r\n  const columnTitle = type === 'departures' ? 'DESTINATION' : 'ORIGIN';\r\n\r\n  return (\r\n    <div className=\"flight-section\" id={sectionId}>\r\n      <div className=\"section-header\">\r\n        <div className=\"flight-icon\">✈️</div>\r\n        <h2>{title}</h2>\r\n      </div>\r\n      <table id={tableId}>\r\n        <thead>\r\n          <tr>\r\n            <th>TIME</th>\r\n            <th>{columnTitle}</th>\r\n            <th>FLIGHT</th>\r\n            <th>GATE</th>\r\n            <th>STATUS</th>\r\n            <th>EST</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {processedFlights.map((flight, index) => renderFlightRow(flight, index))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FlightTable;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}