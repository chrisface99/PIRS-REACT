{"ast":null,"code":"import{CONFIG}from\"./config.js\";class WeatherService{constructor(){this.weatherCache={};}async fetchWeather(city){const now=Date.now();if(this.weatherCache[city]&&now-this.weatherCache[city].timestamp<CONFIG.WEATHER_CACHE_TTL){return this.weatherCache[city].data;}try{const response=await fetch(`${CONFIG.OPENWEATHER_URL}${city}&appid=${CONFIG.OPENWEATHER_API_KEY}`);const data=await response.json();if(data.main&&data.weather){const weatherData={temp:`${Math.round(data.main.temp)}°C`,condition:data.weather[0].main,icon:this.getWeatherIcon(data.weather[0].main.toLowerCase())};this.weatherCache[city]={data:weatherData,timestamp:now};return weatherData;}}catch(error){console.error(`Error fetching weather for ${city}:`,error);}return{temp:\"N/A\",condition:\"Loading...\",icon:\"🌤️\"};}getWeatherIcon(weatherCondition){if(weatherCondition.includes(\"clear\"))return\"☀️\";if(weatherCondition.includes(\"cloud\"))return\"☁️\";if(weatherCondition.includes(\"rain\")||weatherCondition.includes(\"drizzle\"))return\"🌧️\";if(weatherCondition.includes(\"snow\"))return\"❄️\";if(weatherCondition.includes(\"thunderstorm\"))return\"⛈️\";return\"🌤️\";}}export default WeatherService;","map":{"version":3,"names":["CONFIG","WeatherService","constructor","weatherCache","fetchWeather","city","now","Date","timestamp","WEATHER_CACHE_TTL","data","response","fetch","OPENWEATHER_URL","OPENWEATHER_API_KEY","json","main","weather","weatherData","temp","Math","round","condition","icon","getWeatherIcon","toLowerCase","error","console","weatherCondition","includes"],"sources":["C:/Users/c.pulawski/workspace/pirs-react-app/widget/src/services/WeatherService.js"],"sourcesContent":["import { CONFIG } from \"./config.js\";\r\n\r\nclass WeatherService {\r\n  constructor() {\r\n    this.weatherCache = {};\r\n  }\r\n\r\n  async fetchWeather(city) {\r\n    const now = Date.now();\r\n\r\n    if (\r\n      this.weatherCache[city] &&\r\n      now - this.weatherCache[city].timestamp < CONFIG.WEATHER_CACHE_TTL\r\n    ) {\r\n      return this.weatherCache[city].data;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(\r\n        `${CONFIG.OPENWEATHER_URL}${city}&appid=${CONFIG.OPENWEATHER_API_KEY}`\r\n      );\r\n      const data = await response.json();\r\n\r\n      if (data.main && data.weather) {\r\n        const weatherData = {\r\n          temp: `${Math.round(data.main.temp)}°C`,\r\n          condition: data.weather[0].main,\r\n          icon: this.getWeatherIcon(data.weather[0].main.toLowerCase())\r\n        };\r\n\r\n        this.weatherCache[city] = { data: weatherData, timestamp: now };\r\n        return weatherData;\r\n      }\r\n    } catch (error) {\r\n      console.error(`Error fetching weather for ${city}:`, error);\r\n    }\r\n\r\n    return { temp: \"N/A\", condition: \"Loading...\", icon: \"🌤️\" };\r\n  }\r\n\r\n  getWeatherIcon(weatherCondition) {\r\n    if (weatherCondition.includes(\"clear\")) return \"☀️\";\r\n    if (weatherCondition.includes(\"cloud\")) return \"☁️\";\r\n    if (weatherCondition.includes(\"rain\") || weatherCondition.includes(\"drizzle\")) return \"🌧️\";\r\n    if (weatherCondition.includes(\"snow\")) return \"❄️\";\r\n    if (weatherCondition.includes(\"thunderstorm\")) return \"⛈️\";\r\n    return \"🌤️\";\r\n  }\r\n}\r\n\r\nexport default WeatherService;"],"mappings":"AAAA,OAASA,MAAM,KAAQ,aAAa,CAEpC,KAAM,CAAAC,cAAe,CACnBC,WAAWA,CAAA,CAAG,CACZ,IAAI,CAACC,YAAY,CAAG,CAAC,CAAC,CACxB,CAEA,KAAM,CAAAC,YAAYA,CAACC,IAAI,CAAE,CACvB,KAAM,CAAAC,GAAG,CAAGC,IAAI,CAACD,GAAG,CAAC,CAAC,CAEtB,GACE,IAAI,CAACH,YAAY,CAACE,IAAI,CAAC,EACvBC,GAAG,CAAG,IAAI,CAACH,YAAY,CAACE,IAAI,CAAC,CAACG,SAAS,CAAGR,MAAM,CAACS,iBAAiB,CAClE,CACA,MAAO,KAAI,CAACN,YAAY,CAACE,IAAI,CAAC,CAACK,IAAI,CACrC,CAEA,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAC1B,GAAGZ,MAAM,CAACa,eAAe,GAAGR,IAAI,UAAUL,MAAM,CAACc,mBAAmB,EACtE,CAAC,CACD,KAAM,CAAAJ,IAAI,CAAG,KAAM,CAAAC,QAAQ,CAACI,IAAI,CAAC,CAAC,CAElC,GAAIL,IAAI,CAACM,IAAI,EAAIN,IAAI,CAACO,OAAO,CAAE,CAC7B,KAAM,CAAAC,WAAW,CAAG,CAClBC,IAAI,CAAE,GAAGC,IAAI,CAACC,KAAK,CAACX,IAAI,CAACM,IAAI,CAACG,IAAI,CAAC,IAAI,CACvCG,SAAS,CAAEZ,IAAI,CAACO,OAAO,CAAC,CAAC,CAAC,CAACD,IAAI,CAC/BO,IAAI,CAAE,IAAI,CAACC,cAAc,CAACd,IAAI,CAACO,OAAO,CAAC,CAAC,CAAC,CAACD,IAAI,CAACS,WAAW,CAAC,CAAC,CAC9D,CAAC,CAED,IAAI,CAACtB,YAAY,CAACE,IAAI,CAAC,CAAG,CAAEK,IAAI,CAAEQ,WAAW,CAAEV,SAAS,CAAEF,GAAI,CAAC,CAC/D,MAAO,CAAAY,WAAW,CACpB,CACF,CAAE,MAAOQ,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,8BAA8BrB,IAAI,GAAG,CAAEqB,KAAK,CAAC,CAC7D,CAEA,MAAO,CAAEP,IAAI,CAAE,KAAK,CAAEG,SAAS,CAAE,YAAY,CAAEC,IAAI,CAAE,KAAM,CAAC,CAC9D,CAEAC,cAAcA,CAACI,gBAAgB,CAAE,CAC/B,GAAIA,gBAAgB,CAACC,QAAQ,CAAC,OAAO,CAAC,CAAE,MAAO,IAAI,CACnD,GAAID,gBAAgB,CAACC,QAAQ,CAAC,OAAO,CAAC,CAAE,MAAO,IAAI,CACnD,GAAID,gBAAgB,CAACC,QAAQ,CAAC,MAAM,CAAC,EAAID,gBAAgB,CAACC,QAAQ,CAAC,SAAS,CAAC,CAAE,MAAO,KAAK,CAC3F,GAAID,gBAAgB,CAACC,QAAQ,CAAC,MAAM,CAAC,CAAE,MAAO,IAAI,CAClD,GAAID,gBAAgB,CAACC,QAAQ,CAAC,cAAc,CAAC,CAAE,MAAO,IAAI,CAC1D,MAAO,KAAK,CACd,CACF,CAEA,cAAe,CAAA5B,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}