{"ast":null,"code":"// widget/src/services/FlightService.js\nimport { CONFIG } from \"./config.js\";\nclass FlightService {\n  constructor() {\n    this._lastFetchTime = null;\n    this._lastFetchType = null;\n    this._lastData = null;\n    this._fetchInProgress = false;\n    this._fetchQueue = [];\n  }\n  async fetchArrivals() {\n    const code = typeof CONFIG.iataCodeCity === 'string' && CONFIG.iataCodeCity.length === 3 ? CONFIG.iataCodeCity : \"WAW\";\n\n    // Get current date in YYYY-MM-DD format\n    const now = new Date();\n    const year = now.getFullYear();\n    const month = String(now.getMonth() + 1).padStart(2, '0');\n    const day = String(now.getDate()).padStart(2, '0');\n    const flightDate = `${year}-${month}-${day}`;\n    const url = `https://api.aviationstack.com/v1/flights?access_key=${CONFIG.AVIATIONSTACK_API_KEY}&arr_iata=${code}&arr_scheduled_time_arr=${flightDate}`;\n    console.log(\"[FlightService] Fetching flights from URL:\", url);\n    if (!CONFIG.AVIATIONSTACK_API_KEY || CONFIG.AVIATIONSTACK_API_KEY === \"\") {\n      console.error(\"[FlightService] API key is missing or empty!\", CONFIG.AVIATIONSTACK_API_KEY);\n      return [];\n    }\n    try {\n      const response = await fetch(url);\n      if (!response.ok) {\n        console.error(`[FlightService] Fetch failed: HTTP status ${response.status} - ${response.statusText}`);\n        return [];\n      }\n      const data = await response.json();\n      return Array.isArray(data.data) ? data.data : [];\n    } catch (error) {\n      console.error(\"Error fetching arrivals:\", error, \"URL:\", url, \"API Key:\", CONFIG.AVIATIONSTACK_API_KEY);\n      return [];\n    }\n  }\n  updateFromConfig(config) {\n    if (config && typeof config.iataCodeCity === \"string\" && config.iataCodeCity.length === 3) {\n      CONFIG.iataCodeCity = config.iataCodeCity;\n    }\n  }\n  getFetchUrl(type, iataCode) {\n    const code = typeof CONFIG.iataCodeCity === 'string' && CONFIG.iataCodeCity.length === 3 ? CONFIG.iataCodeCity : typeof iataCode === 'string' && iataCode.length === 3 ? iataCode : \"WAW\";\n    return `${CONFIG.AVIATIONSTACK_BASE_URL}?access_key=${CONFIG.AVIATIONSTACK_API_KEY}&iataCode=${code}&type=${type}`;\n  }\n  async fetchFlights(type = \"departure\", iataCode) {\n    const now = Date.now();\n    if (this._lastFetchTime && this._lastFetchType === type && now - this._lastFetchTime < 180000 && this._lastData) {\n      return this._lastData;\n    }\n    if (this._fetchInProgress) {\n      return new Promise((resolve, reject) => {\n        this._fetchQueue.push({\n          type,\n          resolve,\n          reject\n        });\n      });\n    }\n    this._fetchInProgress = true;\n    if (!this._lastFetchTime) {\n      await new Promise(resolve => setTimeout(resolve, 3000));\n    }\n    const url = this.getFetchUrl(type, iataCode);\n    console.log(\"[FlightService] Fetching flights from URL:\", url);\n    try {\n      const response = await fetch(url);\n      const data = await response.json();\n      this._lastFetchTime = Date.now();\n      this._lastFetchType = type;\n      this._lastData = data.data || [];\n      while (this._fetchQueue.length > 0) {\n        const queued = this._fetchQueue.shift();\n        queued.resolve(this._lastData);\n      }\n      return this._lastData;\n    } catch (error) {\n      while (this._fetchQueue.length > 0) {\n        const queued = this._fetchQueue.shift();\n        queued.reject(error);\n      }\n      console.error(\"Error fetching flight data:\", error);\n      return [];\n    } finally {\n      this._fetchInProgress = false;\n    }\n  }\n  async fetchAirlineIcon(airlineCode) {\n    const iconUrlSvgS = `${CONFIG.AIRLINE_ICON_S_URL}${airlineCode}.svg`;\n    try {\n      const responseSvgS = await fetch(iconUrlSvgS);\n      if (responseSvgS.ok) {\n        return iconUrlSvgS;\n      }\n    } catch (error) {\n      console.error(`Error fetching airline icon SVG from S_URL for ${airlineCode}:`, error);\n    }\n    const iconUrlPngT = `${CONFIG.AIRLINE_ICON_T_URL}${airlineCode}.png`;\n    try {\n      const responsePngT = await fetch(iconUrlPngT);\n      if (responsePngT.ok) {\n        return iconUrlPngT;\n      }\n    } catch (error) {\n      console.error(`Error fetching airline icon PNG from T_URL for ${airlineCode}:`, error);\n    }\n    const iconUrlSvgBase = `${CONFIG.AIRLINE_ICON_BASE_URL}${airlineCode}.svg`;\n    try {\n      const responseSvgBase = await fetch(iconUrlSvgBase);\n      if (responseSvgBase.ok) {\n        const text = await responseSvgBase.text();\n        const trimmed = text.trim();\n        if (trimmed.length > 0 && !trimmed.toLowerCase().includes('<html') && (trimmed.startsWith('<svg') || trimmed.startsWith('<?xml'))) {\n          return iconUrlSvgBase;\n        }\n      }\n    } catch (error) {\n      console.error(`Error fetching airline icon SVG from BASE_URL for ${airlineCode}:`, error);\n    }\n    const externalDefault = `${CONFIG.DEFAULT_AIRLINE_ICON}`;\n    try {\n      const responseDefault = await fetch(externalDefault);\n      if (responseDefault.ok) {\n        const text = await responseDefault.text();\n        const trimmed = text.trim();\n        if (trimmed.length > 0 && !trimmed.toLowerCase().includes('<html') && (trimmed.startsWith('<svg') || trimmed.startsWith('<?xml'))) {\n          return externalDefault;\n        }\n      }\n    } catch (error) {\n      console.error(`Error fetching external default airline icon:`, error);\n    }\n    return 'data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 55 55\"><circle fill=\"#0381fe\" cx=\"27.5\" cy=\"7.5\" r=\"5.6\"/><circle fill=\"#0381fe\" cx=\"27.5\" cy=\"47.5\" r=\"5.6\"/><circle fill=\"#0381fe\" cx=\"7.5\" cy=\"27.5\" r=\"5.6\"/><circle fill=\"#00d694\" cx=\"47.5\" cy=\"27.5\" r=\"5.6\"/></svg>';\n  }\n}\nexport default FlightService;","map":{"version":3,"names":["CONFIG","FlightService","constructor","_lastFetchTime","_lastFetchType","_lastData","_fetchInProgress","_fetchQueue","fetchArrivals","code","iataCodeCity","length","now","Date","year","getFullYear","month","String","getMonth","padStart","day","getDate","flightDate","url","AVIATIONSTACK_API_KEY","console","log","error","response","fetch","ok","status","statusText","data","json","Array","isArray","updateFromConfig","config","getFetchUrl","type","iataCode","AVIATIONSTACK_BASE_URL","fetchFlights","Promise","resolve","reject","push","setTimeout","queued","shift","fetchAirlineIcon","airlineCode","iconUrlSvgS","AIRLINE_ICON_S_URL","responseSvgS","iconUrlPngT","AIRLINE_ICON_T_URL","responsePngT","iconUrlSvgBase","AIRLINE_ICON_BASE_URL","responseSvgBase","text","trimmed","trim","toLowerCase","includes","startsWith","externalDefault","DEFAULT_AIRLINE_ICON","responseDefault"],"sources":["C:/Users/c.pulawski/workspace/pirs-react-app/widget/src/services/FlightService.js"],"sourcesContent":["// widget/src/services/FlightService.js\r\nimport { CONFIG } from \"./config.js\";\r\n\r\nclass FlightService {\r\n  constructor() {\r\n    this._lastFetchTime = null;\r\n    this._lastFetchType = null;\r\n    this._lastData = null;\r\n    this._fetchInProgress = false;\r\n    this._fetchQueue = [];\r\n  }\r\n\r\n  async fetchArrivals() {\r\n    const code = (typeof CONFIG.iataCodeCity === 'string' && CONFIG.iataCodeCity.length === 3)\r\n      ? CONFIG.iataCodeCity\r\n      : \"WAW\";\r\n    \r\n    // Get current date in YYYY-MM-DD format\r\n    const now = new Date();\r\n    const year = now.getFullYear();\r\n    const month = String(now.getMonth() + 1).padStart(2, '0');\r\n    const day = String(now.getDate()).padStart(2, '0');\r\n    const flightDate = `${year}-${month}-${day}`;\r\n    const url = `https://api.aviationstack.com/v1/flights?access_key=${CONFIG.AVIATIONSTACK_API_KEY}&arr_iata=${code}&arr_scheduled_time_arr=${flightDate}`;\r\n    \r\n    console.log(\"[FlightService] Fetching flights from URL:\", url);\r\n    \r\n    if (!CONFIG.AVIATIONSTACK_API_KEY || CONFIG.AVIATIONSTACK_API_KEY === \"\") {\r\n      console.error(\"[FlightService] API key is missing or empty!\", CONFIG.AVIATIONSTACK_API_KEY);\r\n      return [];\r\n    }\r\n    \r\n    try {\r\n      const response = await fetch(url);\r\n      if (!response.ok) {\r\n        console.error(`[FlightService] Fetch failed: HTTP status ${response.status} - ${response.statusText}`);\r\n        return [];\r\n      }\r\n      const data = await response.json();\r\n      return Array.isArray(data.data) ? data.data : [];\r\n    } catch (error) {\r\n      console.error(\"Error fetching arrivals:\", error, \"URL:\", url, \"API Key:\", CONFIG.AVIATIONSTACK_API_KEY);\r\n      return [];\r\n    }\r\n  }\r\n\r\n  updateFromConfig(config) {\r\n    if (config && typeof config.iataCodeCity === \"string\" && config.iataCodeCity.length === 3) {\r\n      CONFIG.iataCodeCity = config.iataCodeCity;\r\n    }\r\n  }\r\n\r\n  getFetchUrl(type, iataCode) {\r\n    const code = (typeof CONFIG.iataCodeCity === 'string' && CONFIG.iataCodeCity.length === 3)\r\n      ? CONFIG.iataCodeCity\r\n      : (typeof iataCode === 'string' && iataCode.length === 3)\r\n        ? iataCode\r\n        : \"WAW\";\r\n    return `${CONFIG.AVIATIONSTACK_BASE_URL}?access_key=${CONFIG.AVIATIONSTACK_API_KEY}&iataCode=${code}&type=${type}`;\r\n  }\r\n\r\n  async fetchFlights(type = \"departure\", iataCode) {\r\n    const now = Date.now();\r\n    if (\r\n      this._lastFetchTime &&\r\n      this._lastFetchType === type &&\r\n      now - this._lastFetchTime < 180000 &&\r\n      this._lastData\r\n    ) {\r\n      return this._lastData;\r\n    }\r\n\r\n    if (this._fetchInProgress) {\r\n      return new Promise((resolve, reject) => {\r\n        this._fetchQueue.push({ type, resolve, reject });\r\n      });\r\n    }\r\n\r\n    this._fetchInProgress = true;\r\n    if (!this._lastFetchTime) {\r\n      await new Promise(resolve => setTimeout(resolve, 3000));\r\n    }\r\n    \r\n    const url = this.getFetchUrl(type, iataCode);\r\n    console.log(\"[FlightService] Fetching flights from URL:\", url);\r\n    \r\n    try {\r\n      const response = await fetch(url);\r\n      const data = await response.json();\r\n      this._lastFetchTime = Date.now();\r\n      this._lastFetchType = type;\r\n      this._lastData = data.data || [];\r\n      \r\n      while (this._fetchQueue.length > 0) {\r\n        const queued = this._fetchQueue.shift();\r\n        queued.resolve(this._lastData);\r\n      }\r\n      \r\n      return this._lastData;\r\n    } catch (error) {\r\n      while (this._fetchQueue.length > 0) {\r\n        const queued = this._fetchQueue.shift();\r\n        queued.reject(error);\r\n      }\r\n      console.error(\"Error fetching flight data:\", error);\r\n      return [];\r\n    } finally {\r\n      this._fetchInProgress = false;\r\n    }\r\n  }\r\n\r\n  async fetchAirlineIcon(airlineCode) {\r\n    const iconUrlSvgS = `${CONFIG.AIRLINE_ICON_S_URL}${airlineCode}.svg`;\r\n    try {\r\n      const responseSvgS = await fetch(iconUrlSvgS);\r\n      if (responseSvgS.ok) {\r\n        return iconUrlSvgS;\r\n      }\r\n    } catch (error) {\r\n      console.error(`Error fetching airline icon SVG from S_URL for ${airlineCode}:`, error);\r\n    }\r\n\r\n    const iconUrlPngT = `${CONFIG.AIRLINE_ICON_T_URL}${airlineCode}.png`;\r\n    try {\r\n      const responsePngT = await fetch(iconUrlPngT);\r\n      if (responsePngT.ok) {\r\n        return iconUrlPngT;\r\n      }\r\n    } catch (error) {\r\n      console.error(`Error fetching airline icon PNG from T_URL for ${airlineCode}:`, error);\r\n    }\r\n\r\n    const iconUrlSvgBase = `${CONFIG.AIRLINE_ICON_BASE_URL}${airlineCode}.svg`;\r\n    try {\r\n      const responseSvgBase = await fetch(iconUrlSvgBase);\r\n      if (responseSvgBase.ok) {\r\n        const text = await responseSvgBase.text();\r\n        const trimmed = text.trim();\r\n        if (\r\n          trimmed.length > 0 &&\r\n          !trimmed.toLowerCase().includes('<html') &&\r\n          (trimmed.startsWith('<svg') || trimmed.startsWith('<?xml'))\r\n        ) {\r\n          return iconUrlSvgBase;\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(`Error fetching airline icon SVG from BASE_URL for ${airlineCode}:`, error);\r\n    }\r\n    \r\n    const externalDefault = `${CONFIG.DEFAULT_AIRLINE_ICON}`;\r\n    try {\r\n      const responseDefault = await fetch(externalDefault);\r\n      if (responseDefault.ok) {\r\n        const text = await responseDefault.text();\r\n        const trimmed = text.trim();\r\n        if (\r\n          trimmed.length > 0 &&\r\n          !trimmed.toLowerCase().includes('<html') &&\r\n          (trimmed.startsWith('<svg') || trimmed.startsWith('<?xml'))\r\n        ) {\r\n          return externalDefault;\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(`Error fetching external default airline icon:`, error);\r\n    }\r\n    \r\n    return 'data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 55 55\"><circle fill=\"#0381fe\" cx=\"27.5\" cy=\"7.5\" r=\"5.6\"/><circle fill=\"#0381fe\" cx=\"27.5\" cy=\"47.5\" r=\"5.6\"/><circle fill=\"#0381fe\" cx=\"7.5\" cy=\"27.5\" r=\"5.6\"/><circle fill=\"#00d694\" cx=\"47.5\" cy=\"27.5\" r=\"5.6\"/></svg>';\r\n  }\r\n}\r\n\r\nexport default FlightService;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}