{"ast":null,"code":"import { CONFIG } from \"./config.js\";\nclass WeatherService {\n  constructor() {\n    this.weatherCache = {};\n  }\n  async fetchWeather(city) {\n    const now = Date.now();\n    if (this.weatherCache[city] && now - this.weatherCache[city].timestamp < CONFIG.WEATHER_CACHE_TTL) {\n      return this.weatherCache[city].data;\n    }\n    try {\n      const response = await fetch(`${CONFIG.OPENWEATHER_URL}${city}&appid=${CONFIG.OPENWEATHER_API_KEY}`);\n      const data = await response.json();\n      if (data.main && data.weather) {\n        const weatherData = {\n          temp: `${Math.round(data.main.temp)}°C`,\n          condition: data.weather[0].main,\n          icon: this.getWeatherIcon(data.weather[0].main.toLowerCase())\n        };\n        this.weatherCache[city] = {\n          data: weatherData,\n          timestamp: now\n        };\n        return weatherData;\n      }\n    } catch (error) {\n      console.error(`Error fetching weather for ${city}:`, error);\n    }\n    return {\n      temp: \"N/A\",\n      condition: \"Loading...\",\n      icon: \"🌤️\"\n    };\n  }\n  getWeatherIcon(weatherCondition) {\n    if (weatherCondition.includes(\"clear\")) return \"☀️\";\n    if (weatherCondition.includes(\"cloud\")) return \"☁️\";\n    if (weatherCondition.includes(\"rain\") || weatherCondition.includes(\"drizzle\")) return \"🌧️\";\n    if (weatherCondition.includes(\"snow\")) return \"❄️\";\n    if (weatherCondition.includes(\"thunderstorm\")) return \"⛈️\";\n    return \"🌤️\";\n  }\n}\nexport default WeatherService;","map":{"version":3,"names":["CONFIG","WeatherService","constructor","weatherCache","fetchWeather","city","now","Date","timestamp","WEATHER_CACHE_TTL","data","response","fetch","OPENWEATHER_URL","OPENWEATHER_API_KEY","json","main","weather","weatherData","temp","Math","round","condition","icon","getWeatherIcon","toLowerCase","error","console","weatherCondition","includes"],"sources":["C:/Users/c.pulawski/workspace/pirs-react-app/widget/src/services/WeatherService.js"],"sourcesContent":["import { CONFIG } from \"./config.js\";\r\n\r\nclass WeatherService {\r\n  constructor() {\r\n    this.weatherCache = {};\r\n  }\r\n\r\n  async fetchWeather(city) {\r\n    const now = Date.now();\r\n\r\n    if (\r\n      this.weatherCache[city] &&\r\n      now - this.weatherCache[city].timestamp < CONFIG.WEATHER_CACHE_TTL\r\n    ) {\r\n      return this.weatherCache[city].data;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(\r\n        `${CONFIG.OPENWEATHER_URL}${city}&appid=${CONFIG.OPENWEATHER_API_KEY}`\r\n      );\r\n      const data = await response.json();\r\n\r\n      if (data.main && data.weather) {\r\n        const weatherData = {\r\n          temp: `${Math.round(data.main.temp)}°C`,\r\n          condition: data.weather[0].main,\r\n          icon: this.getWeatherIcon(data.weather[0].main.toLowerCase())\r\n        };\r\n\r\n        this.weatherCache[city] = { data: weatherData, timestamp: now };\r\n        return weatherData;\r\n      }\r\n    } catch (error) {\r\n      console.error(`Error fetching weather for ${city}:`, error);\r\n    }\r\n\r\n    return { temp: \"N/A\", condition: \"Loading...\", icon: \"🌤️\" };\r\n  }\r\n\r\n  getWeatherIcon(weatherCondition) {\r\n    if (weatherCondition.includes(\"clear\")) return \"☀️\";\r\n    if (weatherCondition.includes(\"cloud\")) return \"☁️\";\r\n    if (weatherCondition.includes(\"rain\") || weatherCondition.includes(\"drizzle\")) return \"🌧️\";\r\n    if (weatherCondition.includes(\"snow\")) return \"❄️\";\r\n    if (weatherCondition.includes(\"thunderstorm\")) return \"⛈️\";\r\n    return \"🌤️\";\r\n  }\r\n}\r\n\r\nexport default WeatherService;"],"mappings":"AAAA,SAASA,MAAM,QAAQ,aAAa;AAEpC,MAAMC,cAAc,CAAC;EACnBC,WAAWA,CAAA,EAAG;IACZ,IAAI,CAACC,YAAY,GAAG,CAAC,CAAC;EACxB;EAEA,MAAMC,YAAYA,CAACC,IAAI,EAAE;IACvB,MAAMC,GAAG,GAAGC,IAAI,CAACD,GAAG,CAAC,CAAC;IAEtB,IACE,IAAI,CAACH,YAAY,CAACE,IAAI,CAAC,IACvBC,GAAG,GAAG,IAAI,CAACH,YAAY,CAACE,IAAI,CAAC,CAACG,SAAS,GAAGR,MAAM,CAACS,iBAAiB,EAClE;MACA,OAAO,IAAI,CAACN,YAAY,CAACE,IAAI,CAAC,CAACK,IAAI;IACrC;IAEA,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,GAAGZ,MAAM,CAACa,eAAe,GAAGR,IAAI,UAAUL,MAAM,CAACc,mBAAmB,EACtE,CAAC;MACD,MAAMJ,IAAI,GAAG,MAAMC,QAAQ,CAACI,IAAI,CAAC,CAAC;MAElC,IAAIL,IAAI,CAACM,IAAI,IAAIN,IAAI,CAACO,OAAO,EAAE;QAC7B,MAAMC,WAAW,GAAG;UAClBC,IAAI,EAAE,GAAGC,IAAI,CAACC,KAAK,CAACX,IAAI,CAACM,IAAI,CAACG,IAAI,CAAC,IAAI;UACvCG,SAAS,EAAEZ,IAAI,CAACO,OAAO,CAAC,CAAC,CAAC,CAACD,IAAI;UAC/BO,IAAI,EAAE,IAAI,CAACC,cAAc,CAACd,IAAI,CAACO,OAAO,CAAC,CAAC,CAAC,CAACD,IAAI,CAACS,WAAW,CAAC,CAAC;QAC9D,CAAC;QAED,IAAI,CAACtB,YAAY,CAACE,IAAI,CAAC,GAAG;UAAEK,IAAI,EAAEQ,WAAW;UAAEV,SAAS,EAAEF;QAAI,CAAC;QAC/D,OAAOY,WAAW;MACpB;IACF,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,8BAA8BrB,IAAI,GAAG,EAAEqB,KAAK,CAAC;IAC7D;IAEA,OAAO;MAAEP,IAAI,EAAE,KAAK;MAAEG,SAAS,EAAE,YAAY;MAAEC,IAAI,EAAE;IAAM,CAAC;EAC9D;EAEAC,cAAcA,CAACI,gBAAgB,EAAE;IAC/B,IAAIA,gBAAgB,CAACC,QAAQ,CAAC,OAAO,CAAC,EAAE,OAAO,IAAI;IACnD,IAAID,gBAAgB,CAACC,QAAQ,CAAC,OAAO,CAAC,EAAE,OAAO,IAAI;IACnD,IAAID,gBAAgB,CAACC,QAAQ,CAAC,MAAM,CAAC,IAAID,gBAAgB,CAACC,QAAQ,CAAC,SAAS,CAAC,EAAE,OAAO,KAAK;IAC3F,IAAID,gBAAgB,CAACC,QAAQ,CAAC,MAAM,CAAC,EAAE,OAAO,IAAI;IAClD,IAAID,gBAAgB,CAACC,QAAQ,CAAC,cAAc,CAAC,EAAE,OAAO,IAAI;IAC1D,OAAO,KAAK;EACd;AACF;AAEA,eAAe5B,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}